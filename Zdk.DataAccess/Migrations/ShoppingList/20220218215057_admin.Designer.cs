// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Zdk.DataAccess.Migrations.ShoppingList
{
    [DbContext(typeof(ShoppingListContext))]
    [Migration("20220218215057_admin")]
    partial class admin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Zdk.Shared.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("GroupId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_name");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("owner");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("GroupId");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("Zdk.Shared.Models.GroupMembership", b =>
                {
                    b.Property<int>("GroupMembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_membership_id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("GroupMembershipId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_current");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("GroupMembershipId");

                    b.HasIndex("GroupId");

                    b.ToTable("group_memberships");
                });

            modelBuilder.Entity("Zdk.Shared.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ItemId"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_name");

                    b.Property<string>("PostedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("posted_by");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("integer")
                        .HasColumnName("shopping_list_id");

                    b.Property<bool>("SoldOut")
                        .HasColumnType("boolean")
                        .HasColumnName("sold_out");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("ItemId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("items");
                });

            modelBuilder.Entity("Zdk.Shared.Models.ShoppingList", b =>
                {
                    b.Property<int>("ShoppingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("shopping_list_id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ShoppingListId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("PostedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("posted_by");

                    b.Property<string>("ShoppingListName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shopping_list_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("ShoppingListId");

                    b.HasIndex("GroupId");

                    b.ToTable("shopping_lists");
                });

            modelBuilder.Entity("Zdk.Shared.Models.UserSession", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("is_admin");

                    b.HasKey("UserId");

                    b.ToTable("user_sessions");
                });

            modelBuilder.Entity("Zdk.Shared.Models.GroupMembership", b =>
                {
                    b.HasOne("Zdk.Shared.Models.Group", null)
                        .WithMany("GroupMemberships")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zdk.Shared.Models.Item", b =>
                {
                    b.HasOne("Zdk.Shared.Models.ShoppingList", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zdk.Shared.Models.ShoppingList", b =>
                {
                    b.HasOne("Zdk.Shared.Models.Group", null)
                        .WithMany("ShoppingLists")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zdk.Shared.Models.Group", b =>
                {
                    b.Navigation("GroupMemberships");

                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("Zdk.Shared.Models.ShoppingList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
